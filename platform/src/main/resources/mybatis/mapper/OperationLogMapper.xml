<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.audio.electric.mapper.OperationLogMapper">
  <resultMap id="BaseResultMap" type="com.audio.electric.domain.OperationLog">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="method" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="class_method" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_date" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="account_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="way" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ip" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="parameter" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, url, method, class_method, create_date, user_id, account_id, way, ip, parameter
  </sql>
  <select id="selectByExample" parameterType="com.audio.electric.domain.OperationLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operation_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operation_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.audio.electric.domain.OperationLogExample">
    delete from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.audio.electric.domain.OperationLog">
    insert into operation_log (id, url, method, 
      class_method, create_date, user_id, 
      account_id, way, ip, 
      parameter)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{classMethod,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{accountId,jdbcType=VARCHAR}, #{way,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{parameter,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.audio.electric.domain.OperationLog">
    insert into operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="classMethod != null">
        class_method,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="way != null">
        way,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="parameter != null">
        parameter,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="classMethod != null">
        #{classMethod,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="way != null">
        #{way,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        #{parameter,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.audio.electric.domain.OperationLogExample" resultType="java.lang.Integer">
    select count(*) from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update operation_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.classMethod != null">
        class_method = #{record.classMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.way != null">
        way = #{record.way,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.parameter != null">
        parameter = #{record.parameter,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update operation_log
    set id = #{record.id,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      class_method = #{record.classMethod,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      way = #{record.way,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      parameter = #{record.parameter,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.audio.electric.domain.OperationLog">
    update operation_log
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="classMethod != null">
        class_method = #{classMethod,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="way != null">
        way = #{way,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        parameter = #{parameter,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.audio.electric.domain.OperationLog">
    update operation_log
    set url = #{url,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      class_method = #{classMethod,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      way = #{way,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      parameter = #{parameter,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>